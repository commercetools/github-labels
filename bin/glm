#!/usr/bin/env node

const mri = require('mri');
const { labelControl, writeLabelsConfig } = require('../lib/index');

const flags = mri(process.argv.slice(2));
const commands = flags._;
const command = commands[0];

function printHelp() {
  console.log(`
  GITHUB LABEL MANAGER

    Usage: ./bin/glm [command] [option]

      Commands:
        init        Initializes the label manager. It creates a new label-config.json
                    file with the current label data of your repository.

        sync        Uploads all changes you've made in the label-config.json file
                    into the repository to update the label with the given changes.
  `);
}

function printMessage(message) {
  console.log(`
  GITHUB LABEL MANAGER...
    ${message}
  `);
}

(async () => {
  try {
    if (command === 'sync') {
      const summary = await labelControl();
      if (typeof summary === 'string') {
        printMessage(summary);
      }
      setTimeout(await writeLabelsConfig, 1000);
      if (typeof summary === 'object') {
        printMessage(`Labels synchronized!
      ${summary.created} created
      ${summary.deleted} deleted
      ${summary.updated} updated
        `);
      }
    } else if (command === 'init') {
      await writeLabelsConfig();
      printMessage('Labels successfully stored!');
    } else {
      printHelp();
    }
  } catch (err) {
    console.error(err);
    printHelp();
    process.exit(1);
  }
})();
