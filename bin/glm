#!/usr/bin/env node

const fs = require('fs');
const mri = require('mri');
const { labelControl, writeLabelsConfig } = require('../lib/index');

const flags = mri(process.argv.slice(2));
const commands = flags._;
const command = commands[0];

function printHelp() {
  console.log(`
  GITHUB LABEL MANAGER

    Usage: ./bin/glm [command] [option]

      Commands:
        init        Initializes the label manager. It creates a new label-config.json
                    file with the current label data of your repository.

        sync        Uploads all changes you've made in the label-config.json file
                    into the repository to update the label with the given changes.
  `);
}

function printMessage(summary) {
  console.log(`
  GITHUB LABEL MANAGER...
    ${summary.message}
    ${
      summary.stats
        ? `${summary.stats.created} created
    ${summary.stats.deleted} deleted
    ${summary.stats.updated} updated`
        : ''
    }`);
}

(async () => {
  try {
    switch (command) {
      case 'sync':
        if (!fs.existsSync('./label-config.json')) {
          printMessage({
            message: `label-config.json not found.
    Run ./bin/glm init to create the config file.`,
          });
        } else {
          printMessage(await labelControl());
        }
        break;
      case 'init':
        await writeLabelsConfig();
        printMessage({ message: 'Labels successfully stored!' });
        break;
      default:
        printHelp();
    }
  } catch (err) {
    console.error((err.response && err.response.data) || err);
    printHelp();
    process.exit(1);
  }
})();
